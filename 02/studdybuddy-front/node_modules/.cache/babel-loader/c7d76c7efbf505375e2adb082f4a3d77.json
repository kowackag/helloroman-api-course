{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\01_PROGRAMOWANIE\\\\HR\\\\helloroman-api-course\\\\02\\\\studdybuddy-front\\\\src\\\\components\\\\StudentForm\\\\StudentForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport axios from \"axios\";\nimport { useForm } from 'react-hook-form';\nimport { EditButton } from 'components/EditButton';\nimport { Average } from 'components/Average';\nimport { getGradesAvg } from 'helpers/gradesAvg';\nimport * as yup from 'yup';\nimport { Title, Wrapper } from 'components/SchoolNews/SchoolNews.styles';\nimport { AddScoreWrapper, Field, Form, Input, Label, SaveButton, Scores, ScoresWrapper } from 'components/StudentForm/StudentForm.styles';\nlet grade = yup.number();\ngrade.integer('Ocena musi być liczbowa').positive('Ocena musi być liczbą dodatnią').min(1, 'Ocena musi być wyższa od 0').max(6, 'Ocena musi być niższa od 7');\n\nconst StudentForm = () => {\n  _s();\n\n  const [scores, setScores] = useState([]);\n  const [scoreInputValue, setScoreInputValue] = useState('');\n  const {\n    register,\n    handleSubmit,\n    watch,\n    errors\n  } = useForm();\n  const [average, setAverage] = useState();\n\n  const onSubmit = ({\n    name,\n    age,\n    group,\n    grades\n  }) => {\n    axios.post('https://localhost:8000/users', {\n      name,\n      age: parseInt(age, 10),\n      grades: scores,\n      group\n    });\n    console.log({ ...data,\n      scores\n    });\n  };\n\n  useEffect(() => {\n    if (scores.length) setAverage(getGradesAvg(scores));\n  }, [scores]);\n\n  const handleScoreInputChange = e => {\n    setScoreInputValue(e.target.value);\n  };\n\n  const handleAddGrade = () => {\n    setScores([...scores, parseInt(scoreInputValue)]);\n    setScoreInputValue('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: \"Dodaj ucznia\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(Field, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          children: \"Imi\\u0119\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          id: \"name\",\n          name: \"name\",\n          ref: register\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          children: \"Grupa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          id: \"group\",\n          name: \"group\",\n          ref: register\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          children: \"Wiek\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          id: \"age\",\n          name: \"age\",\n          ref: register\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          children: \"Dodaj ocen\\u0119\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(AddScoreWrapper, {\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            id: \"score\",\n            name: \"score\",\n            value: scoreInputValue,\n            onChange: handleScoreInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(EditButton, {\n            type: \"button\",\n            onClick: handleAddGrade,\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ScoresWrapper, {\n        children: [/*#__PURE__*/_jsxDEV(Scores, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Oceny\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: scores.join(', ')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Average, {\n          value: average,\n          children: average\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SaveButton, {\n        type: \"submit\",\n        children: \"zapisz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(StudentForm, \"ryWsH4X6zsf9fPZ0g56JDJudxw8=\", false, function () {\n  return [useForm];\n});\n\n_c = StudentForm;\nStudentForm.propTypes = {};\nexport default StudentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"StudentForm\");","map":{"version":3,"sources":["D:/01_PROGRAMOWANIE/HR/helloroman-api-course/02/studdybuddy-front/src/components/StudentForm/StudentForm.js"],"names":["React","useState","useEffect","useRef","PropTypes","axios","useForm","EditButton","Average","getGradesAvg","yup","Title","Wrapper","AddScoreWrapper","Field","Form","Input","Label","SaveButton","Scores","ScoresWrapper","grade","number","integer","positive","min","max","StudentForm","scores","setScores","scoreInputValue","setScoreInputValue","register","handleSubmit","watch","errors","average","setAverage","onSubmit","name","age","group","grades","post","parseInt","console","log","data","length","handleScoreInputChange","e","target","value","handleAddGrade","join","propTypes"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport axios from \"axios\";\r\nimport { useForm } from 'react-hook-form';\r\nimport { EditButton } from 'components/EditButton';\r\nimport { Average } from 'components/Average';\r\nimport { getGradesAvg } from 'helpers/gradesAvg';\r\nimport * as yup from 'yup';\r\nimport { Title, Wrapper } from 'components/SchoolNews/SchoolNews.styles';\r\nimport {\r\n  AddScoreWrapper,\r\n  Field,\r\n  Form,\r\n  Input,\r\n  Label, SaveButton,\r\n  Scores,\r\n  ScoresWrapper\r\n} from 'components/StudentForm/StudentForm.styles';\r\n\r\nlet grade = yup.number();\r\ngrade\r\n  .integer('Ocena musi być liczbowa')\r\n  .positive('Ocena musi być liczbą dodatnią')\r\n  .min(1, 'Ocena musi być wyższa od 0')\r\n  .max(6, 'Ocena musi być niższa od 7');\r\n\r\nconst StudentForm = () => {\r\n  const [scores, setScores] = useState([]);\r\n  const [scoreInputValue, setScoreInputValue] = useState('');\r\n  const { register, handleSubmit, watch, errors } = useForm();\r\n  const [average, setAverage] = useState();\r\n\r\n  const onSubmit = ({name, age, group, grades})=> {\r\n    axios.post('https://localhost:8000/users',{\r\nname, age:parseInt(age,10), grades:scores, group\r\n    })\r\n    console.log({ ...data, scores })\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (scores.length) setAverage(getGradesAvg(scores));\r\n  }, [scores])\r\n\r\n  const handleScoreInputChange = (e) => {\r\n      setScoreInputValue(e.target.value);\r\n  }\r\n\r\n  const handleAddGrade = () => {\r\n    setScores([...scores, parseInt(scoreInputValue)])\r\n    setScoreInputValue('');\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Title>Dodaj ucznia</Title>\r\n      <Form onSubmit={handleSubmit(onSubmit)}>\r\n        <Field><Label>Imię</Label>\r\n          <Input id=\"name\" name=\"name\" ref={register}/></Field>\r\n        <Field><Label>Grupa</Label>\r\n          <Input id=\"group\" name=\"group\" ref={register}/></Field>\r\n\r\n        <Field><Label>Wiek</Label>\r\n          <Input id=\"age\" name=\"age\" ref={register}/></Field>\r\n        <Field><Label>Dodaj ocenę</Label>\r\n          <AddScoreWrapper>\r\n            <Input id=\"score\" name=\"score\" value={scoreInputValue} onChange={handleScoreInputChange} />\r\n            <EditButton type=\"button\" onClick={handleAddGrade}>+</EditButton>\r\n          </AddScoreWrapper></Field>\r\n        <ScoresWrapper>\r\n          <Scores>\r\n            <p>Oceny</p>\r\n            <p>{scores.join(', ')}</p>\r\n          </Scores>\r\n          <Average value={average}>{average}</Average>\r\n        </ScoresWrapper>\r\n        <SaveButton type=\"submit\">zapisz</SaveButton>\r\n      </Form>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nStudentForm.propTypes = {};\r\n\r\nexport default StudentForm;\r\n"]},"metadata":{},"sourceType":"module"}